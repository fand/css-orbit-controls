{"version":3,"sources":["../src/Vec3.ts","../src/OrbitControls.ts","../src/index.ts","index.ts"],"names":[],"mappings":"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","file":"docs_src.16098208.js","sourceRoot":"../docs_src","sourcesContent":["export class Vec3 {\n    constructor(public x: number, public y: number, public z: number) {}\n\n    static one(x: number): Vec3 {\n        return new Vec3(x, x, x);\n    }\n\n    set(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    add(v: Vec3): Vec3 {\n        return new Vec3(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n\n    sub(v: Vec3): Vec3 {\n        return new Vec3(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n\n    mul(v: Vec3): Vec3 {\n        return new Vec3(this.x * v.x, this.y * v.y, this.z * v.z);\n    }\n\n    div(v: Vec3): Vec3 {\n        return new Vec3(this.x / v.x, this.y / v.y, this.z / v.z);\n    }\n\n    scale(k: number): Vec3 {\n        return new Vec3(this.x * k, this.y * k, this.z * k);\n    }\n}\n","import { Vec3 } from \"./Vec3\";\nexport class OrbitControls {\n    // private touches = {\n    //     ONE: \"ROTATE\",\n    //     TWO: \"DOLLY_PAN\",\n    // };\n\n    private rotation = Vec3.one(0);\n    private scale = 1;\n    private translate = Vec3.one(0);\n    private isDragging = false;\n    private dragStartPos = Vec3.one(0);\n    private rotationOffset = Vec3.one(0);\n    private translateOffset = Vec3.one(0);\n\n    private button = 0;\n\n    constructor(private element: HTMLElement) {}\n\n    start() {\n        this.element.style.transformOrigin = \"50% 50%\";\n\n        window.addEventListener(\"pointerdown\", this.onPointerDown);\n        window.addEventListener(\"pointermove\", this.onPointerMove);\n        window.addEventListener(\"pointerup\", this.onPointerUp);\n        this.element.addEventListener(\"wheel\", this.onWheel);\n        this.element.addEventListener(\"contextmenu\", this.onContextMenu);\n    }\n\n    stop() {\n        window.removeEventListener(\"pointerdown\", this.onPointerDown);\n        window.removeEventListener(\"pointermove\", this.onPointerMove);\n        window.removeEventListener(\"pointerup\", this.onPointerUp);\n        this.element.removeEventListener(\"wheel\", this.onWheel);\n        this.element.removeEventListener(\"contextmenu\", this.onContextMenu);\n    }\n\n    onPointerDown = (e: PointerEvent) => {\n        if (!this.element.contains(e.target as HTMLElement)) {\n            return;\n        }\n\n        e.preventDefault();\n        this.isDragging = true;\n        this.dragStartPos.x = e.clientX;\n        this.dragStartPos.y = e.clientY;\n        this.button = e.button;\n    };\n\n    onPointerMove = (e: PointerEvent) => {\n        if (!this.isDragging) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const x = e.clientX;\n        const y = e.clientY;\n\n        if (this.button === 0) {\n            // Left button\n            this.rotation.x = -(y - this.dragStartPos.y);\n            this.rotation.y = x - this.dragStartPos.x;\n        } else if (this.button === 2) {\n            // Right button\n            this.translate.x = x - this.dragStartPos.x;\n            this.translate.y = y - this.dragStartPos.y;\n        }\n\n        this.update();\n    };\n\n    onPointerUp = (e: PointerEvent) => {\n        if (!this.isDragging) {\n            return;\n        }\n\n        e.preventDefault();\n        this.isDragging = false;\n\n        this.rotationOffset = this.rotation.add(this.rotationOffset);\n        this.rotation = Vec3.one(0);\n        this.translateOffset = this.translate;\n    };\n\n    onWheel = (e: WheelEvent) => {\n        e.preventDefault();\n        this.scale -= e.deltaY / 100;\n        this.update();\n    };\n\n    onContextMenu = (e: MouseEvent) => {\n        e.preventDefault();\n    };\n\n    update() {\n        const s = this.scale;\n        this.element.style.transform = `\n            scale3d(${s}, ${s}, ${s})\n            rotateX(${this.rotation.x + this.rotationOffset.x}deg)\n            rotateY(${this.rotation.y + this.rotationOffset.y}deg)\n            translate3d(\n                ${this.translate.x + this.translateOffset.x}px,\n                ${this.translate.y + this.translateOffset.y}px,\n                0\n            )\n        `;\n    }\n}\n","export { OrbitControls } from \"./OrbitControls\";\n","import { OrbitControls } from \"../src\";\n\nconst el = document.querySelector(\"#element\");\nconst ctrl = new OrbitControls(el as HTMLElement);\nctrl.start();\n\nwindow.onbeforeunload = () => {\n    ctrl.stop();\n};\n"]}